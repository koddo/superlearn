
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;   # was 0?

    #gzip  on;

    # resolver 172.17.0.1 valid=5s;   # dnsdock
    resolver 127.0.0.11 valid=5s;   # built-in docker resolver
    resolver_timeout 5s;

    server {
        server_name _;
        listen 8443 default_server;

        ssl on;
        ssl_certificate       server.crt;
        ssl_certificate_key   server.key;

        # copied this comment from somewhere:
        # so, nginx is stupid. we need to fool it into thinking
        # that the proxy upstream is a runtime variable (e.g.
        # it could be based off a $http_* variable.) this is the
        # only way that triggers to use the resolver at runtime.
        set $backend                  backend;
        set $figwheel                 figwheel;
        set $browser_console_logger   browser-console-logger;
        
        location ^~ /figwheel-ws {       # it may contain build id like '/figwheel-ws/dev'
            access_log off;

            proxy_pass http://$figwheel:3449;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }

        location = /browser-console-logger {
            access_log off;

            proxy_pass http://$browser_console_logger:9907;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # proxy_read_timeout 86400;
        }


        location ~ ^/($|index.html$|favicon.ico$|css/|js/) {         # too lazy to just move these files to a static/ folder, maybe later
            root /var/www/;
            access_log off;
            sendfile  off;
        }   

        location / {
            # access_log off;

            proxy_pass http://$backend:8080;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # proxy_read_timeout 86400;
        }
      }
}




